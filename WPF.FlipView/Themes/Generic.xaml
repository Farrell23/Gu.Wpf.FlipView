<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPF.FlipView">

    <local:BooleanToHiddenConverter x:Key="BoolToHiddenConverter" />
    <local:BooleanToCollapsedConverter x:Key="BoolToCollapsedConverter" />
    <Geometry x:Key="LeftArrowPath">F1 M 35.8724,37.6042L 39.0391,40.7708L 50.5182,51.8542L 40.2266,51.8542L 25.1849,37.6041L 40.2266,23.3542L 50.5182,23.3542L 39.0391,34.4375L 35.8724,37.6042 Z</Geometry>
    <Geometry x:Key="RightArrowPath">F1 M 39.8307,37.6042L 36.6641,34.4375L 25.1849,23.3542L 35.4766,23.3542L 50.5182,37.6042L 35.4766,51.8542L 25.1849,51.8542L 36.6641,40.7708L 39.8307,37.6042 Z</Geometry>

    <Style x:Key="ArrowPathStyle" TargetType="Path">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="Fill" />
    </Style>

    <Style x:Key="IndexListBoxItem" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Border x:Name="Bd"
                                Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FlipView}},
                                                Path=IndexWidth}"
                                Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FlipView}},
                                                 Path=IndexHeight}"
                                Margin="5,0,5,0"
                                Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FlipView}},
                                                     Path=IndexColor}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FlipView}}, Path=SelectedIndexColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplate" Value="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding ItemTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="#FF636161" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="border"
                                Background="#FFAAA4A4"
                                IsManipulationEnabled="False"
                                Opacity="0.79"
                                SnapsToDevicePixels="true" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFCDCBCB" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF272727" />
                            <Setter Property="TextElement.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="40" />
    </Style>

    <Style x:Key="ArrowButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#FF636161" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Opacity" Value="0.3" />
        <Setter Property="Width" Value="75" />
        <Setter Property="Height" Value="40" />
        <Setter Property="IsManipulationEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="true" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:FlipView}, Path=ShowArrows}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:FlipView}, Path=ShowArrows}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FlipView}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <!--  <Setter Property="IsManipulationEnabled" Value="True" />  -->
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="GestureTracker">
            <Setter.Value>
                <local:CompositeGestureTracker>
                    <local:CompositeGestureTracker.GestureTrackers>
                        <local:MouseGestureTracker />
                        <local:MouseGestureTracker />
                    </local:CompositeGestureTracker.GestureTrackers>
                </local:CompositeGestureTracker>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FlipView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ListBox Grid.Row="0"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="3"
                                     Margin="0,5,0,5"
                                     HorizontalAlignment="Center"
                                     BorderThickness="0"
                                     ItemContainerStyle="{StaticResource IndexListBoxItem}"
                                     ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                           Path=Items}"
                                     SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                             Path=SelectedIndex,
                                                             Mode=TwoWay,
                                                             UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="{TemplateBinding ShowIndex,
                                                                  Converter={StaticResource BoolToCollapsedConverter},
                                                                  ConverterParameter=true}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>

                            <!--  ReSharper disable once Xaml.MissingGridIndex Set in style  -->
                            <Border x:Name="LeftArrow"
                                    Grid.Row="1"
                                    Panel.ZIndex="100"
                                    Visibility="{Binding ElementName=LeftArrowButton,
                                                         Path=IsEnabled,
                                                         Mode=OneWay,
                                                         UpdateSourceTrigger=PropertyChanged,
                                                         Converter={StaticResource BoolToHiddenConverter}}">
                                <RepeatButton x:Name="LeftArrowButton"
                                              HorizontalAlignment="Left"
                                              Command="BrowseBack"
                                              Style="{StaticResource ArrowButtonStyle}">
                                    <RepeatButton.Content>
                                        <Path Data="{StaticResource LeftArrowPath}" Style="{StaticResource ArrowPathStyle}" />
                                    </RepeatButton.Content>
                                </RepeatButton>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:FlipView}, Path=ArrowPlacement}" Value="Inside">
                                                <Setter Property="Grid.Column" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:FlipView}, Path=ArrowPlacement}" Value="Outside">
                                                <Setter Property="Grid.Column" Value="0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <!--  ReSharper disable once Xaml.MissingGridIndex Set in style  -->
                            <Border x:Name="RightArrow"
                                    Grid.Row="1"
                                    Panel.ZIndex="100"
                                    Visibility="{Binding ElementName=RightArrowButton,
                                                         Path=IsEnabled,
                                                         Mode=OneWay,
                                                         UpdateSourceTrigger=PropertyChanged,
                                                         Converter={StaticResource BoolToHiddenConverter}}">
                                <RepeatButton x:Name="RightArrowButton"
                                              HorizontalAlignment="Right"
                                              Command="BrowseForward"
                                              Style="{StaticResource ArrowButtonStyle}">
                                    <RepeatButton.Content>
                                        <Path Data="{StaticResource RightArrowPath}" Style="{StaticResource ArrowPathStyle}" />
                                    </RepeatButton.Content>
                                </RepeatButton>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:FlipView}, Path=ArrowPlacement}" Value="Inside">
                                                <Setter Property="Grid.Column" Value="1" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:FlipView}, Path=ArrowPlacement}" Value="Outside">
                                                <Setter Property="Grid.Column" Value="2" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <Grid x:Name="PART_SwipePanel"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  Background="Transparent"
                                  ClipToBounds="True"
                                  IsManipulationEnabled="True">

                                <ContentPresenter x:Name="NextItem"
                                                  Content="{Binding PreviousItem,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  RenderTransform="{Binding NextTransform,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ContentStyle}" />
                                <ContentPresenter x:Name="CurrentItem"
                                                  Content="{Binding SelectedItem,
                                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                                  RenderTransform="{Binding CurrentTransform,
                                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ContentStyle}" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
